/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.benjcarrentalsystem;

import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.model.Filters;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.bson.Document;

/**
 *
 * @author BenjZionGMoedillas
 */
public class Clients extends javax.swing.JPanel {

    /**
     * Creates new form AddCarPage
     */
    String search; 
    public Clients() {
        initComponents();
        retrieveData();
        refreshTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        carSearchText = new javax.swing.JLabel();
        companyName1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        clientTable = new javax.swing.JTable();
        userIdSearchField = new javax.swing.JTextField();
        removeUserButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        smallDoodleBackground = new javax.swing.JLabel();
        DoodleBackground = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        carSearchText.setBackground(new java.awt.Color(55, 6, 6));
        carSearchText.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 14)); // NOI18N
        carSearchText.setForeground(new java.awt.Color(55, 6, 6));
        carSearchText.setText("ENTER USER ID NUMBER ");
        add(carSearchText, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 140, 40));

        companyName1.setBackground(new java.awt.Color(55, 6, 6));
        companyName1.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 24)); // NOI18N
        companyName1.setForeground(new java.awt.Color(55, 6, 6));
        companyName1.setText("LIST OF CLIENTS");
        add(companyName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 210, 40));

        jScrollPane1.setBackground(new java.awt.Color(255, 102, 102));

        clientTable.setBackground(new java.awt.Color(255, 102, 102));
        clientTable.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        clientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Client ID ", "Client Name", "Contact", "RentalStatus"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(clientTable);
        if (clientTable.getColumnModel().getColumnCount() > 0) {
            clientTable.getColumnModel().getColumn(0).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 690, 330));

        userIdSearchField.setBackground(new java.awt.Color(255, 102, 102));
        userIdSearchField.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        userIdSearchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userIdSearchFieldActionPerformed(evt);
            }
        });
        add(userIdSearchField, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 70, 240, 40));

        removeUserButton.setBackground(new java.awt.Color(43, 13, 13));
        removeUserButton.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        removeUserButton.setForeground(new java.awt.Color(255, 255, 255));
        removeUserButton.setText("REMOVE USER");
        removeUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeUserButtonActionPerformed(evt);
            }
        });
        add(removeUserButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 490, 250, 60));

        refreshButton.setBackground(new java.awt.Color(43, 13, 13));
        refreshButton.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        refreshButton.setForeground(new java.awt.Color(255, 255, 255));
        refreshButton.setText("REFRESH TABLE");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });
        add(refreshButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 490, 230, 60));

        smallDoodleBackground.setBackground(new java.awt.Color(51, 51, 51));
        smallDoodleBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doodle2.png"))); // NOI18N
        add(smallDoodleBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 0, 140, 570));

        DoodleBackground.setBackground(new java.awt.Color(51, 51, 51));
        DoodleBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doodle2.png"))); // NOI18N
        add(DoodleBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, 0, 740, 570));
    }// </editor-fold>//GEN-END:initComponents
    // DISPLAY DATA IN TABLE
    public void retrieveData(){
    try(MongoClient client = MongoClients.create("mongodb://localhost:27017")){
        
    MongoDatabase database = client.getDatabase("CRS");
    MongoCollection<Document> UsersCollection = database.getCollection("Users");
    
    FindIterable<Document> findIterable = UsersCollection.find();
    Iterator<Document> iterator = findIterable.iterator(); 
    while(iterator.hasNext()){
        Document document = iterator.next();
        Object[] row = {document.get("userId"),document.get("name"),document.get("contact")};
        
        DefaultTableModel model = (DefaultTableModel)clientTable.getModel();
        model.addRow(row);
    }   
        }catch(Exception ex){
            ex.printStackTrace();
        } 
    }
    
    //REMOVE A USER
    public void removeData(){
        search = userIdSearchField.getText();
        
    try(MongoClient client = MongoClients.create("mongodb://localhost:27017")){
        
    MongoDatabase database = client.getDatabase("CRS");
    MongoCollection<Document> CarsCollection = database.getCollection("Users");
    
        Document document = CarsCollection.findOneAndDelete(Filters.eq("userId",search));
        DefaultTableModel model = (DefaultTableModel)clientTable.getModel();
        retrieveData();
        
        }catch(Exception ex){
            ex.printStackTrace();
        }
        
    }
    
    // REFRESH THE TABLE
      public void refreshTable(){
         try (MongoClient client = MongoClients.create("mongodb://localhost:27017")) {
        MongoDatabase database = client.getDatabase("CRS");
        MongoCollection<Document> UsersCollection = database.getCollection("Users");

        FindIterable<Document> findIterable = UsersCollection.find();
        
        DefaultTableModel model = (DefaultTableModel) clientTable.getModel();
        model.setRowCount(0); 

        for (Document document : findIterable) {
            Object[] row = {
                document.get("userId"),
                document.get("name"),
                document.get("contact"),
                document.get("rentedString")
  
            };
            model.addRow(row);
        }

    } catch (Exception ex) {
        ex.printStackTrace();
    }
}

      
      
       
    private void userIdSearchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userIdSearchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userIdSearchFieldActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        // TODO add your handling code here:
        refreshTable();
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void removeUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeUserButtonActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null,"This user data will be removed, are you sure you want to continue?");
        removeData();
        refreshTable();
        userIdSearchField.setText("");
    }//GEN-LAST:event_removeUserButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DoodleBackground;
    private javax.swing.JLabel carSearchText;
    private javax.swing.JTable clientTable;
    private javax.swing.JLabel companyName1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton removeUserButton;
    private javax.swing.JLabel smallDoodleBackground;
    private javax.swing.JTextField userIdSearchField;
    // End of variables declaration//GEN-END:variables
}
